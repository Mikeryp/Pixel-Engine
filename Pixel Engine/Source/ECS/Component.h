#pragma once
#include"../Utils/DataTypes.h"
#include<string>


#define PX_Component(component_name) static SystemID system_id;\
		static std::string ToString() {\
			return std::string(#component_name);\
		}\


namespace PX { namespace ECS
{
	// Generates a unique id for every component
	uint32 GetComponentID()
	{
		static uint32 component_id = 0;
		return ++component_id;
	}

	struct ECS_Component
	{
		uint32 component_id;	 // Generated by the System
		uint32 entity_id;		 // Defaults to -1

		ECS_Component()
			:
			component_id(-1),
			entity_id(-1)
		{}

		virtual ~ECS_Component() {}


		// Preffered way to create a component
		bool Init(uint32 system_id, uint32 entity_id)
		{
			this->component_id = GetComponentID();
			this->entity_id = entity_id;
		}

	};
}}